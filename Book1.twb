<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook original-version='18.1' source-build='2021.2.1 (20212.21.0712.0907)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (TableauTable1)' inline='true' name='federated.1hvxjb61lny3ge1f96ilz0cwd4hz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauTable1' name='excel-direct.022tdro03oo9kl1dxw35e00xzsku'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/DataAnalysis/Youtube1/TableauTable1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.022tdro03oo9kl1dxw35e00xzsku' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.022tdro03oo9kl1dxw35e00xzsku' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5261EF5E323043C694DA668D9D3F68F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5261EF5E323043C694DA668D9D3F68F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5261EF5E323043C694DA668D9D3F68F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_5261EF5E323043C694DA668D9D3F68F1]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_5261EF5E323043C694DA668D9D3F68F1'>
            <properties context=''>
              <relation connection='excel-direct.022tdro03oo9kl1dxw35e00xzsku' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (TableauTable2)' inline='true' name='federated.0q6p4a00xulf7818h0epa05vgxyd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauTable2' name='excel-direct.0i9fe871vgehko1advlkt0ce6wu7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/DataAnalysis/Youtube1/TableauTable2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0i9fe871vgehko1advlkt0ce6wu7' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0i9fe871vgehko1advlkt0ce6wu7' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7E361804B6FC45DFAE520A6EC9EFCCA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7E361804B6FC45DFAE520A6EC9EFCCA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_7E361804B6FC45DFAE520A6EC9EFCCA0]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_7E361804B6FC45DFAE520A6EC9EFCCA0'>
            <properties context=''>
              <relation connection='excel-direct.0i9fe871vgehko1advlkt0ce6wu7' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (TableauTable3)' inline='true' name='federated.0x73bm41y1jfcl1d7yy6w10cvkh9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauTable3' name='excel-direct.0t3r0321s1rkcd17i0wht0nzy954'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/DataAnalysis/Youtube1/TableauTable3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0t3r0321s1rkcd17i0wht0nzy954' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D233:no:A1:D233:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0t3r0321s1rkcd17i0wht0nzy954' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D233:no:A1:D233:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D233:no:A1:D233:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7D9387875EE74C0D8D2423772F414D0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7D9387875EE74C0D8D2423772F414D0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7D9387875EE74C0D8D2423772F414D0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7D9387875EE74C0D8D2423772F414D0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_7D9387875EE74C0D8D2423772F414D0F]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_7D9387875EE74C0D8D2423772F414D0F'>
            <properties context=''>
              <relation connection='excel-direct.0t3r0321s1rkcd17i0wht0nzy954' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D233:no:A1:D233:0' header='yes' outcome='2'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (TableauTable4)' inline='true' name='federated.0wt3gdk0i4v7ml13g4nvz1vl7r9r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauTable4' name='excel-direct.11p3lln1u8uufc1f64gct0grjfzm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/DataAnalysis/Youtube1/TableauTable4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.11p3lln1u8uufc1f64gct0grjfzm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.11p3lln1u8uufc1f64gct0grjfzm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C33ACF6A653C45DEBDF1B86AF50F9C5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C33ACF6A653C45DEBDF1B86AF50F9C5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C33ACF6A653C45DEBDF1B86AF50F9C5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C33ACF6A653C45DEBDF1B86AF50F9C5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C33ACF6A653C45DEBDF1B86AF50F9C5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_C33ACF6A653C45DEBDF1B86AF50F9C5B]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_C33ACF6A653C45DEBDF1B86AF50F9C5B'>
            <properties context=''>
              <relation connection='excel-direct.11p3lln1u8uufc1f64gct0grjfzm' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableauTable1)' name='federated.1hvxjb61lny3ge1f96ilz0cwd4hz' />
          </datasources>
          <datasource-dependencies datasource='federated.1hvxjb61lny3ge1f96ilz0cwd4hz'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hvxjb61lny3ge1f96ilz0cwd4hz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hvxjb61lny3ge1f96ilz0cwd4hz].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hvxjb61lny3ge1f96ilz0cwd4hz].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hvxjb61lny3ge1f96ilz0cwd4hz].[sum:DeathPercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1hvxjb61lny3ge1f96ilz0cwd4hz].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hvxjb61lny3ge1f96ilz0cwd4hz].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hvxjb61lny3ge1f96ilz0cwd4hz].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hvxjb61lny3ge1f96ilz0cwd4hz].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1hvxjb61lny3ge1f96ilz0cwd4hz].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='54' />
            <format attr='width' field='[federated.1hvxjb61lny3ge1f96ilz0cwd4hz].[:Measure Names]' value='135' />
            <format attr='width' value='137' />
            <format attr='color' value='#1b1b1b' />
            <format attr='text-format' field='[federated.1hvxjb61lny3ge1f96ilz0cwd4hz].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1hvxjb61lny3ge1f96ilz0cwd4hz].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hvxjb61lny3ge1f96ilz0cwd4hz].[:Measure Names]' value='24' />
            <format attr='background-color' scope='cols' value='#333333' />
            <format attr='background-color' scope='rows' value='#898989' />
            <format attr='band-color' scope='rows' value='#666666' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' scope='cols' value='#333333' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#666666' />
            <format attr='band-color' scope='rows' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1hvxjb61lny3ge1f96ilz0cwd4hz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.6591712236404419' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hvxjb61lny3ge1f96ilz0cwd4hz].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{2BBE896E-19DE-4F05-956A-8A7F9153CB64}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableauTable2)' name='federated.0q6p4a00xulf7818h0epa05vgxyd' />
          </datasources>
          <datasource-dependencies datasource='federated.0q6p4a00xulf7818h0epa05vgxyd'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0q6p4a00xulf7818h0epa05vgxyd].[none:continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0q6p4a00xulf7818h0epa05vgxyd].[none:continent:nk]' value='85' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0q6p4a00xulf7818h0epa05vgxyd].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0q6p4a00xulf7818h0epa05vgxyd].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{ED8570AE-2257-4E2E-929C-B7523C225C82}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableauTable3)' name='federated.0x73bm41y1jfcl1d7yy6w10cvkh9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0x73bm41y1jfcl1d7yy6w10cvkh9'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x73bm41y1jfcl1d7yy6w10cvkh9].[Longitude (generated)]' field-type='quantitative' max='35056085.000392184' min='-4674306.8759270273' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0x73bm41y1jfcl1d7yy6w10cvkh9].[Latitude (generated)]' field-type='quantitative' max='22072279.704032626' min='373373.48087901808' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x73bm41y1jfcl1d7yy6w10cvkh9].[sum:PercentPopulationInfected:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0x73bm41y1jfcl1d7yy6w10cvkh9].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0x73bm41y1jfcl1d7yy6w10cvkh9].[none:Location:nk]' />
              <color column='[federated.0x73bm41y1jfcl1d7yy6w10cvkh9].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.0x73bm41y1jfcl1d7yy6w10cvkh9].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0x73bm41y1jfcl1d7yy6w10cvkh9].[Latitude (generated)]</rows>
        <cols>[federated.0x73bm41y1jfcl1d7yy6w10cvkh9].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EC92F570-4C16-436C-B810-57C6C48DC0C8}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableauTable4)' name='federated.0wt3gdk0i4v7ml13g4nvz1vl7r9r' />
          </datasources>
          <datasource-dependencies datasource='federated.0wt3gdk0i4v7ml13g4nvz1vl7r9r'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wt3gdk0i4v7ml13g4nvz1vl7r9r].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Nigeria&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wt3gdk0i4v7ml13g4nvz1vl7r9r].[yr:date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='member' level='[yr:date:ok]' member='1899' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wt3gdk0i4v7ml13g4nvz1vl7r9r].[yr:date:ok]</column>
            <column>[federated.0wt3gdk0i4v7ml13g4nvz1vl7r9r].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wt3gdk0i4v7ml13g4nvz1vl7r9r].[none:Location:nk]' />
              <text column='[federated.0wt3gdk0i4v7ml13g4nvz1vl7r9r].[none:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#55007f' />
                <format attr='mark-transparency' value='139' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wt3gdk0i4v7ml13g4nvz1vl7r9r].[avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0wt3gdk0i4v7ml13g4nvz1vl7r9r].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{F65ACB22-84CA-45CD-ADFC-DD2992A93EE6}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='9' param='horz' type-v2='layout-flow' w='98858' x='571' y='1000'>
            <zone h='98000' id='7' type-v2='layout-basic' w='24429' x='571' y='1000'>
              <zone h='32125' id='3' name='Sheet 1' w='24429' x='571' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='65875' id='5' name='Sheet 2' w='24429' x='571' y='33125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='1042' h='98000' id='13' is-fixed='true' type-v2='layout-basic' w='74429' x='25000' y='1000'>
              <zone h='98000' id='15' is-fixed='true' type-v2='layout-basic' w='74429' x='25000' y='1000'>
                <zone h='60125' id='14' param='vert' type-v2='layout-flow' w='74429' x='25000' y='1000'>
                  <zone fixed-size='441' h='56125' id='6' is-fixed='true' name='Sheet 3' w='74429' x='25000' y='1000'>
                    <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='37875' id='16' param='vert' type-v2='layout-flow' w='74429' x='25000' y='61125'>
                  <zone h='37875' id='11' name='Sheet 4' w='74429' x='25000' y='61125'>
                    <layout-cache minheight='198' minwidth='163' type-h='scalable' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='17' param='vert' type-v2='layout-flow' w='98858' x='571' y='1000'>
                <zone fixed-size='249' h='32125' id='3' is-fixed='true' name='Sheet 1' w='24429' x='571' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='56125' id='6' is-fixed='true' name='Sheet 3' w='74429' x='25000' y='1000'>
                  <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='65875' id='5' is-fixed='true' name='Sheet 2' w='24429' x='571' y='33125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37875' id='11' is-fixed='true' name='Sheet 4' w='74429' x='25000' y='61125'>
                  <layout-cache minheight='198' minwidth='163' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9536CF42-08A6-4C77-96E1-CA33BEA92554}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hvxjb61lny3ge1f96ilz0cwd4hz].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{80578E68-0DAE-4FEA-A241-B70628E7EC47}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q6p4a00xulf7818h0epa05vgxyd].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9C691C2-4285-4940-8368-E39E4E06C6DA}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x73bm41y1jfcl1d7yy6w10cvkh9].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x73bm41y1jfcl1d7yy6w10cvkh9].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{4A15A4A2-FE61-4101-BD9A-E6EBDDAE2F85}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wt3gdk0i4v7ml13g4nvz1vl7r9r].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wt3gdk0i4v7ml13g4nvz1vl7r9r].[none:Location:nk]</field>
            <field>[federated.0wt3gdk0i4v7ml13g4nvz1vl7r9r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE20FCA9-F5DB-4912-A235-8E4776FA1A4C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{26C7FA1D-A437-4E4A-93CB-AD2824BA03F9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='166' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
